@inject IXDtoClient xClient
@inject XNavMenu xnav
@attribute [Authorize]
@*Av Sukhrob Ilyosbekov - Stack Overflow*@
@*Endast lärare har åtkomst hit*@

@{
    var showClass = IsVisible ? "d-block" : "d-none";
}

<AuthorizeView Roles ="Teacher">
    <Authorized>
    <div class="toast-container p-3 position-relative @showClass" data-bs-autohide="true" data-bs-delay="5000">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">@HeaderText</strong>
                <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
            </div>

            <div class="toast-body">
                <EditForm Model="@xClient" Context="paginationlmslexnet" OnSubmit="HandleSubmitPagination">
                    <div class="form-group m-md-3">
                        <InputCheckbox id="switch" class="control-label checkbox" type="checkbox" @bind-Value="PagOn" />
                        <label class="control-label toggle" for="switch"></label>
                        @if (PagOn)
                        {
                            <span style="position: relative; top: -3px"> Pagination ON</span>
                        }
                        else
                        {
                            <span style="position: relative; top: -3px"> Pagination OFF</span>
                        }
                    </div>
                    <div class="form-group row">
                        <span class="col-6">
                            <label for="Rows">Set rows</label>
                            <InputNumber id="Rows" class="form-control" @bind-Value="PagRows" Min="1" title="Maximum number of rows for a page" placeholder="Enter rows" />
                        </span>
                        <span class="col-6">
                            <label for="Red">Set reducing nr.</label>
                            <InputNumber id="Red" class="form-control" @bind-Value="PagRed" Min="1" title="To reduce the number of visible buttons (1=none)" placeholder="Enter reducing nr" />
                        </span>
                    </div>
                    <div class="form-group m-3">
                        <button type="submit" class="text-white rembtn" style="margin-right: 15px">Save settings</button>
                        <button type="button" class="text-white remnot" @onclick="Close">NO</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    </Authorized>
    <NotAuthorized>
        <h5 style="font-weight: bold; color: red">You are not authorized to visit this page...</h5>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string? HeaderText { get; set; }

    private bool PagOn;

    private int PagRows;

    private int PagRed;

    public void Show()
    {
        xnav.SetReset('a');

        PagOn = Auxx.PagOn;
        PagRows = Auxx.PagRows;
        PagRed = Auxx.PagRed;
        HeaderText = "Pagination settings...";
        IsVisible = true;
        StateHasChanged();
    }

    private void Close()
    {
        HeaderText = string.Empty;
        IsVisible = false;
        StateHasChanged();
    }

    private async Task HandleSubmitPagination()
    {
        try
        {
            Auxx.PagOn = PagOn;
            Auxx.PagRows = PagRows;
            Auxx.PagRed = PagRed;
            StateHasChanged();
            await xClient.SetStorage<string>($"Pag{Auxx.PagId}On", PagOn.ToString());
            await xClient.SetStorage<string>($"Pag{Auxx.PagId}Rows", PagRows.ToString());
            await xClient.SetStorage<string>($"Pag{Auxx.PagId}Red", PagRed.ToString());
        }
        catch
        {
            xnav.SetError("xnaverror", "An error occurred while saving to local storage.");
            xnav.SetReset('e');
            StateHasChanged();
            await Task.Delay(3000);
        }
        Close(); // Ingen omnavigering eftersom det nollställer alla statiska variabler.
    }
}